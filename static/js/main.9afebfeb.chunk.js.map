{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","size","onClick","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","onChange","e","target","value","length","autoFocus","trim","alert","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleDarkMode","darkMode","content","previous","App","setNotes","searchText","setSearchText","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9afebfeb.chunk.js","sourcesContent":["import React from 'react'\r\nimport {MdDeleteForever} from 'react-icons/md'\r\n\r\nfunction Note({id,text,date,handleDeleteNote}) {\r\n    return (\r\n        <div className=\"note\">\r\n            <span>{text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever\r\n                    className=\"delete-icon\"\r\n                    size=\"1.3em\" \r\n                    onClick={()=>{handleDeleteNote(id)}}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","import React,{useState} from 'react'\r\n\r\n\r\n\r\nfunction AddNote({handleAddNote}) {\r\n\r\n    const [noteText,setNoteText]=useState('')\r\n    const charLimit=200\r\n\r\n    const handleChange=(e)=>{\r\n        if(charLimit-e.target.value.length>=0){\r\n            setNoteText(e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleClick=()=>{\r\n\r\n        if(noteText.trim().length>0){\r\n            handleAddNote(noteText)\r\n            setNoteText('')\r\n        }else{\r\n            //Warning for empty note.\r\n            alert('Type something in note!(Empty)')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"note new\">\r\n            <textarea\r\n                rows='8'\r\n                cols='10'\r\n                placeholder='Type your notes here...'\r\n                onChange={handleChange}\r\n                value={noteText}\r\n                autoFocus\r\n            ></textarea>\r\n\r\n            <div className=\"note-footer\">\r\n                <small>{charLimit-noteText.length} Remaining</small>\r\n                <button className=\"save-btn\" onClick={handleClick} >Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNote\r\n","import React from 'react'\r\nimport Note from './Note'\r\nimport AddNote from './AddNote'\r\n\r\nfunction NotesList({notes,handleAddNote,handleDeleteNote}) {\r\n    return (\r\n        <div className=\"notes-list\">\r\n            <AddNote handleAddNote={handleAddNote}/>\r\n            {\r\n                notes.map((note)=>(\r\n                    <Note\r\n                        key={note.id}\r\n                        id={note.id}\r\n                        text={note.text}\r\n                        date={note.date}\r\n                        handleDeleteNote={handleDeleteNote}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList\r\n","import React from 'react'\r\nimport {MdSearch} from 'react-icons/md'\r\n\r\nfunction Search({handleSearchNote}) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <MdSearch\r\n                className=\"search-icon\"\r\n                size=\"1.3em\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                onChange={e=>handleSearchNote(e.target.value)}\r\n                className=\"search-input\"\r\n                placeholder=\"Search your notes...\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport {BsMoon} from 'react-icons/bs'\r\nimport {MdWbSunny} from 'react-icons/md'\r\nimport Tippy from '@tippy.js/react'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\nfunction Header({handleDarkMode,darkMode}) {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Notes</h1>\r\n            <Tippy content={<small>Dark/Light Mode Toggle</small>}>\r\n                <button\r\n                    className=\"togg-btn\"\r\n                    onClick={()=>handleDarkMode(previous=>!previous)}\r\n                >{!darkMode?<BsMoon size=\"1.3em\"/>:<MdWbSunny className=\"sun-icon\" size=\"1.3em\"/>}</button>\r\n            </Tippy>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useState,useEffect} from 'react'\nimport {nanoid} from 'nanoid'\nimport NotesList from './components/NotesList'\nimport Search from './components/Search'\nimport Header from './components/Header'\n\nfunction App() {\n\n  //Notes Data\n  const [notes, setNotes] = useState([])\n  \n  //Searching\n  const [searchText,setSearchText]=useState('')\n\n  //Dark Mode\n  const [darkMode,setDarkMode]=useState(false)\n\n  //Retrieving data from local storage\n  useEffect(()=>{\n    const savedNotes=JSON.parse(\n      localStorage.getItem('react-notes-app-data')\n    )\n    \n    //Setting retrieved data to state.\n    if(savedNotes){\n      setNotes(savedNotes)\n    }\n  },[])\n\n  //Storing data in local storage\n  useEffect(() => {\n    localStorage.setItem(\n      'react-notes-app-data',\n      JSON.stringify(notes)\n    )\n  }, [notes])\n\n  //Add note\n  const addNote=(text)=>{\n    const date=new Date()\n    const newNote={\n      id:nanoid(),\n      text: text,\n      date:date.toLocaleDateString()\n    }\n\n    const newNotes=[...notes,newNote]\n\n    setNotes(newNotes)\n  }\n\n  //Delete Note\n  const deleteNote=(id) => {\n    const newNotes=notes.filter((note)=>note.id!==id)\n    setNotes(newNotes)\n  }\n\n  return (\n    <div className={darkMode?'dark-mode':null}>\n      <div className=\"container\">\n        <Header darkMode={darkMode} handleDarkMode={setDarkMode}/>\n        <Search handleSearchNote={setSearchText}/>\n        <NotesList\n          notes={notes.filter((note)=>\n            note.text.toLowerCase().includes(searchText.toLowerCase()\n          ))}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n        {notes.length<=0?<h2 className=\"empty-msg\">Add your notes...</h2>:null}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}